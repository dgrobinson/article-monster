name: Extraction Suite

on:
  push:
    branches: [ main ]
    paths:
      - 'public/readability.min.js'
      - 'public/bookmarklet.js'
      - 'test-cases/**'
      - 'test/dev-scripts/**'
      - 'scripts/**'
      - 'test/goldens.manifest.json'
      - 'site-configs/**'
      - '.github/workflows/extraction-tests.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  goldens:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository (main)
      uses: actions/checkout@v4
      with:
        submodules: false
    
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

    - name: Load golden manifest commit (optional)
      id: manifest
      run: |
        if [ -f test/goldens.manifest.json ]; then
          DEBUG_SHA=$(node -e "const m=require('./test/goldens.manifest.json');console.log(m.debugCommit||'')")
          echo "debug_sha=$DEBUG_SHA" >> $GITHUB_OUTPUT
        else
          echo "debug_sha=" >> $GITHUB_OUTPUT
        fi

    - name: Checkout debug goldens branch
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.manifest.outputs.debug_sha || 'latest-outputs-debug' }}
        path: debug-goldens
    
    - name: Sync goldens from debug branch
      run: npm run sync:goldens

    - name: Run golden (solved) extraction tests
      env:
        ONLY_SOLVED: 'true'
      run: |
        node test/dev-scripts/test-extraction.js 2>&1 | tee goldens.log

    - name: Run FiveFilters extraction tests
      run: |
        node test/dev-scripts/test-extraction-with-fivefilters.js 2>&1 | tee fivefilters-tests.log

    - name: Check for newly passing tests
      if: always()
      run: |
        if [ -f basic-tests.log ] && grep -q "UNSOLVED CASES NOW PASSING" basic-tests.log; then
          echo "🎉 Some unsolved test cases are now passing!" >> $GITHUB_STEP_SUMMARY
          echo "Consider moving them to test-cases/solved/ folder" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload artifacts (goldens)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: goldens-results
        path: |
          goldens.log
          fivefilters-tests.log
          test-cases/unsolved/
        retention-days: 7

  unsolved:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository (main)
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unsolved exploration tests
      env:
        ONLY_UNSOLVED: 'true'
      run: |
        node test/dev-scripts/test-extraction.js 2>&1 | tee unsolved.log || true

    - name: Upload artifacts (unsolved)
      uses: actions/upload-artifact@v4
      with:
        name: unsolved-results
        path: |
          unsolved.log
          test-cases/unsolved/
        retention-days: 7

  validate-fivefilters-configs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Validate FiveFilters configs
      run: |
        echo "## 🔍 FiveFilters Config Validation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Count and list available configs
        config_count=$(ls -1 site-configs/*.txt 2>/dev/null | wc -l)
        echo "Found $config_count site configurations" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check for configs referenced in tests
        echo "### Configs Used in Tests:" >> $GITHUB_STEP_SUMMARY
        for test_file in test-cases/*/*.json; do
          if [ -f "$test_file" ]; then
            url=$(grep -o '"url":[^,]*' "$test_file" | cut -d'"' -f4)
            if [ ! -z "$url" ]; then
              hostname=$(echo "$url" | sed -E 's|https?://([^/]+).*|\1|' | sed 's/^www\.//')
              config_file="site-configs/${hostname}.txt"
              if [ -f "$config_file" ]; then
                echo "✅ $hostname - config exists" >> $GITHUB_STEP_SUMMARY
              else
                echo "❌ $hostname - no config found" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          fi
        done